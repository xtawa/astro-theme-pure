name: 同步（阿里云）OSS到Obsidian仓库

on:
  # 每 5 小时自动同步一次（UTC 时间）
  # 注意：这里保持了你原始输入中的 '0 */5 * * *'，代表每 5 小时，如果你想要每 3 小时，请改为 '0 */3 * * *'
  schedule:
    - cron: '0 */12 * * *' 
  # 允许手动触发
  workflow_dispatch:

jobs:
  sync-from-oss: # Job 名称更改，以反映 OSS 服务
    runs-on: ubuntu-latest
    # 🔴 【新增权限块】授予对仓库内容的写入权限
    permissions:
      contents: write 
    steps:
      # 1️⃣ 拉取代码
      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 1 

      # 2️⃣ 安装并配置 ossutil（阿里云 OSS 官方 CLI）
      - name: 安装并配置 ossutil
        run: |
          # 安装 ossutil
          sudo wget -q http://gosspublic.alicdn.com/ossutil/1.7.15/ossutil64 -O /usr/local/bin/ossutil
          sudo chmod 755 /usr/local/bin/ossutil
          
          # 构造正确的 Aliyun OSS Endpoint: oss-${REGION}.aliyuncs.com
          # 假设 COS_REGION 变量存储的是 Aliyun 地区的 ID (如 cn-shanghai)
          ENDPOINT="oss-${{ secrets.COS_REGION }}.aliyuncs.com"

          # 创建配置文件 ~/.ossutilconfig，ossutil 会使用这个文件连接
          echo "[Credentials]" > ~/.ossutilconfig
          echo "language = EN" >> ~/.ossutilconfig
          echo "endpoint = $ENDPOINT" >> ~/.ossutilconfig
          echo "accessKeyID = ${{ secrets.COS_SECRET_ID }}" >> ~/.ossutilconfig
          echo "accessKeySecret = ${{ secrets.COS_SECRET_KEY }}" >> ~/.ossutilconfig
          
          echo "ossutil 配置完成，Endpoint 使用：$ENDPOINT ✅"
          
      # 3️⃣ 从 OSS 下载到本地 src/content/blog/（保持完全一致，但保留 .gitkeep）
      - name: 拉取 OSS 文件到 src/content/blog/
        run: |
          # **定义本地目标路径**
          TARGET_DIR="./src/content/blog"
          # **定义 OSS 源路径**
          # 💡 修改点 1/2: OSS 源路径已更新
          OSS_SOURCE_PATH="oss://${{ secrets.COS_BUCKET }}/Output/AstroBlog/content/"

          # 自定义的重要文件，需要备份和恢复
          mkdir -p /tmp/content_backup
          
          # 仅备份目标路径下的 .gitkeep，如果存在的话
          if [ -f "$TARGET_DIR/.gitkeep" ]; then
            cp "$TARGET_DIR/.gitkeep" /tmp/content_backup/
          fi

          # 清空目标目录并重新创建，注意：需要先确保上层目录 src/content/ 存在
          # 使用 -p 确保父目录也被创建
          rm -rf "$TARGET_DIR"
          mkdir -p "$TARGET_DIR"

          # 恢复重要文件
          if [ -f "/tmp/content_backup/.gitkeep" ]; then
            cp /tmp/content_backup/.gitkeep "$TARGET_DIR/"
          else
            touch "$TARGET_DIR/.gitkeep" # 确保目录不为空
          fi

          # **!!! 核心修改点：使用 ossutil cp -r 替换 coscli sync !!!**
          # 💡 修改点 2/2: ossutil cp 命令的源路径和目标路径已更新
          # 执行同步，将 OSS 上的 /Output/AstroBlog/content/ 下载到本地 ./src/content/blog/
          ossutil cp -r \
            "$OSS_SOURCE_PATH" \
            "$TARGET_DIR/"
          
          # 确保 .gitkeep 在同步后仍然存在
          if [ ! -f "$TARGET_DIR/.gitkeep" ]; then
            touch "$TARGET_DIR/.gitkeep"
          fi

          echo "OSS 同步完成 ✅，文件已存入 $TARGET_DIR"

      # 4️⃣ 若有变动就提交 (保持不变)
      - name: Commit & push if changed
        env:
          TZ: Asia/Shanghai
        run: |
          git config user.name  "OSS Sync Bot"
          git config user.email "bot@users.noreply.github.com"

          if [[ -n $(git status --porcelain) ]]; then
            git add -A
            git commit -m "chore: sync notes from OSS $(date '+%Y-%m-%d %H:%M:%S')"
            git push
            echo "已检测到变动并推送 🚀"
          else
            echo "没有文件变化，跳过提交 ✔"
          fi
